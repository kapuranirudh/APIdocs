---
swagger: "2.0"
info:
  title: SWAPI
  version: 1.0.0
  description: "SWAPI is the Star Wars API that makes you understand about the resources\
    \ which are available and how to consume standard HTTP response codes, authentication,\
    \ and verbs."
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
consumes:
- application/json
produces:
- application/json
paths:
  /people:
    get:
      parameters:
      - name: next
        description: The next people in the list.
        in: query
        required: true
        type: integer
      - name: count
        description: The counts of the people.
        in: query
        required: true
        type: integer
      - name: previous
        description: The previous people in the list.
        in: query
        required: false
        type: boolean
      - name: results
        description: The results listed.
        in: query
        type: number
      - name: name
        description: "The name of the person. Ex: Lake Skywalker "
        in: query
        required: true
        type: string
      - name: Header
        description: "SWAPI provides two encodings for you to render the data with:\r\
          \n•\tJSON: It is the standard data format provided by SWAPI by default\r\
          \n•\tWookiee: This encoding is identical to JSON except with wookiee translations.\r\
          \n"
        in: header
        required: true
        type: string
      responses:
        "200":
          description: Everything worked as expected.
          schema:
            type: array
            items:
              $ref: '#/definitions/Widget'
          examples:
            application/json: "{\r\n    \"count\": 87,\r\n    \"next\": \"https://swapi.py4e.com/api/people/?page=2\"\
              ,\r\n    \"previous\": null,\r\n    \"results\": [\r\n        {\r\n\
              \            \"name\": \"Luke Skywalker\",\r\n            \"height\"\
              : \"172\",\r\n            \"mass\": \"77\",\r\n            \"hair_color\"\
              : \"blond\",\r\n            \"skin_color\": \"fair\",\r\n          \
              \  \"eye_color\": \"blue\",\r\n            \"birth_year\": \"19BBY\"\
              ,\r\n            \"gender\": \"male\",\r\n            \"homeworld\"\
              : \"https://swapi.py4e.com/api/planets/1/\",\r\n            \"films\"\
              : [\r\n                \"https://swapi.py4e.com/api/films/1/\",\r\n\
              \                \"https://swapi.py4e.com/api/films/2/\",\r\n      \
              \          \"https://swapi.py4e.com/api/films/3/\",\r\n            \
              \    \"https://swapi.py4e.com/api/films/6/\",\r\n                \"\
              https://swapi.py4e.com/api/films/7/\"\r\n            ],\r\n        \
              \    \"species\": [\r\n                \"https://swapi.py4e.com/api/species/1/\"\
              \r\n            ],\r\n            \"vehicles\": [\r\n              \
              \  \"https://swapi.py4e.com/api/vehicles/14/\",\r\n                \"\
              https://swapi.py4e.com/api/vehicles/30/\"\r\n            ],\r\n    \
              \        \"starships\": [\r\n                \"https://swapi.py4e.com/api/starships/12/\"\
              ,\r\n                \"https://swapi.py4e.com/api/starships/22/\"\r\n\
              \            ],\r\n            \"created\": \"2014-12-09T13:50:51.644000Z\"\
              ,\r\n            \"edited\": \"2014-12-20T21:17:56.891000Z\",\r\n  \
              \          \"url\": \"https://swapi.py4e.com/api/people/1/\"\r\n   \
              \     },\r\n"
      operationId: getPeople
      summary: List All people
      description: This API is used to list down all the people in Star Wars.
  /people/:id:
    get:
      parameters:
      - name: name
        description: "The name of the person. Ex: Lake Skywalker "
        in: query
        required: true
        type: string
      - name: Header
        description: "SWAPI provides two encodings for you to render the data with:\r\
          \n•\tJSON: It is the standard data format provided by SWAPI by default\r\
          \n•\tWookiee: This encoding is identical to JSON except with wookiee translations.\r\
          \n"
        in: header
        required: true
        type: string
      - name: height
        description: "The height of the person. Ex: 172"
        in: query
        required: true
        type: number
      - name: mass
        description: "The mass or weight of the person. Ex: 70kg"
        in: query
        required: true
        type: number
        format: float
      - name: hair_color
        description: "The hair color of the person. Ex: Black, Brown, Blond"
        in: query
        required: true
        type: string
      - name: skin_color
        description: "The skin color of the person. Ex: Fair, Brown, Whitish"
        in: query
        required: true
        type: string
      - name: eye_color
        description: "The eye color of the person. Ex: Black, Brown"
        in: query
        required: true
        type: string
      - name: birth_year
        description: "The birth year of the person in-universe standard of BBY or\
          \ ABY - Before the Battle of Yavin or After the Battle of Yavin. - . Ex:\
          \ 19BBY, 112BBY"
        in: query
        required: true
        type: integer
      - name: gender
        description: "The gender of this person. Ex: Either \"Male\", \"Female\" or\
          \ \"unknown\""
        in: query
        required: true
        type: string
      - name: homeworld
        description: ""
        in: query
        required: false
        type: array
        items:
          type: string
      - name: species
        description: ""
        in: query
        required: false
        type: array
        items:
          type: string
      - name: vehicles
        description: ""
        in: query
        required: false
        type: array
        items:
          type: string
      - name: starships
        description: ""
        in: query
        type: array
        items:
          type: string
      - name: created
        description: ""
        in: query
        required: false
        type: string
      - name: edited
        description: ""
        in: query
        type: string
      - name: url
        description: ""
        in: query
        required: false
        type: string
      responses:
        "200":
          description: Everything worked as expected.
          schema:
            $ref: '#/definitions/Widget'
          examples:
            application/json: "\"name\": \"Saesee Tiin\",\r\n    \"height\": \"188\"\
              ,\r\n    \"mass\": \"unknown\",\r\n    \"hair_color\": \"none\",\r\n\
              \    \"skin_color\": \"pale\",\r\n    \"eye_color\": \"orange\",\r\n\
              \    \"birth_year\": \"unknown\",\r\n    \"gender\": \"male\",\r\n \
              \   \"homeworld\": \"https://swapi.py4e.com/api/planets/47/\",\r\n \
              \   \"films\": [\r\n        \"https://swapi.py4e.com/api/films/4/\"\
              ,\r\n        \"https://swapi.py4e.com/api/films/6/\"\r\n    ],\r\n \
              \   \"species\": [\r\n        \"https://swapi.py4e.com/api/species/24/\"\
              \r\n    ],\r\n    \"vehicles\": [],\r\n    \"starships\": [],\r\n  \
              \  \"created\": \"2014-12-20T10:32:11.669000Z\",\r\n    \"edited\":\
              \ \"2014-12-20T21:17:50.434000Z\",\r\n    \"url\": \"https://swapi.py4e.com/api/people/56/\"\
              \r\n"
      operationId: /people/:id
      summary: This API is used to fetch details about 1 people in Star Wars.
      description: This API is used to fetch details about 1 people in Star Wars.
    parameters:
    - name: id
      description: Unique id of the people
      in: query
      required: true
      type: number
definitions:
  Widget:
    description: "A very simple, generic data type."
    type: string
